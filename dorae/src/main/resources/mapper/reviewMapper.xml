<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<insert id="insert" parameterType="reviewVO"
		useGeneratedKeys="true" keyProperty="review_id">
		insert into review values (null,
		#{email}, #{title}, #{images}, #{content},
		#{tag}, null)
	</insert>
	
	<update id="update" parameterType="reviewVO">
		update review
		set review_title = #{title},
		review_content = #{content},
		review_tag = #{tag}
		where review_id = #{id}
	</update>
	
	<update id="imgUpdate" parameterType="reviewVO">
		update review
		set review_img = #{images}
		where review_id = #{id}
	</update>
	
	<update id="delete" parameterType="reviewVO">
		update review
		set delete_date = #{deleteDate}
		where review_id = #{id}
	</update>

	<select id="all" resultType="reviewVO" parameterType="reviewPageVO">
		SELECT id, title, content, tag, images, email
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY review_id DESC) AS review_no,
		review_id as id,
		review_title AS title,
		review_content AS content,
		review_tag AS tag,
		review_img AS images,
		email
		FROM review
		WHERE delete_date IS NULL
		) review2
		WHERE review2.review_no BETWEEN #{start} AND #{end};
	</select>

	<select id="tagSearch" resultType="reviewVO" parameterType="java.util.Map">
		SELECT id, title, content, tag, images, email
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY review_id DESC) AS review_no,
		review_id as id,
		review_title AS title,
		review_content AS content,
		review_tag AS tag,
		review_img AS images,
		email
		FROM review
		where review_tag = #{tag}
		WHERE delete_date IS NULL
		) review2
		WHERE review2.review_no BETWEEN #{start} AND #{end};
	</select>
	
	<select id="one" resultType="reviewVO" parameterType="Integer">
		SELECT
		review_id as id, 
		review_title as title,
		review_content as content,
		review_tag as tag,
		review_img as images,
		email
		FROM review
		where review_id = #{id}
	</select>
	
	<!--전체 게시글 수 계산 -->
	<select id="count" resultType="Integer">
		select count(*) from review
		WHERE delete_date IS NULL
	</select>
	
	<!--태그검색 게시글 수 계산 -->
	<select id="tagCount" resultType="Integer" parameterType="String">
		select count(*) from review where review_tag = #{tag}
		WHERE delete_date IS NULL
	</select>
	
	<!--태그 공연명 연동 -->
	<select id= "tag" resultType="playVO" parameterType="reviewPageVO">
		SELECT play_name, genre_name
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY play_start DESC) AS play_no,
		play_name, genre_name
		FROM play
		WHERE delete_date IS NULL
		) play2
		WHERE play2.play_no BETWEEN #{start} AND #{end};
	</select>
	
	<!--전체 공연 수 계산 -->
	<select id="playCount" resultType="Integer">
		select count(*) from play
		WHERE delete_date IS NULL
	</select>
	
	<!--공연 태그 검색  -->
	<select id="playSearch" resultType="playVO" parameterType="java.util.Map">
		SELECT play_name, genre_name
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY play_start DESC) AS play_no,
		play_name, genre_name
		FROM play
		WHERE play_name LIKE CONCAT('%', #{query}, '%')
		AND delete_date IS NULL
		) play2
		WHERE play2.play_no BETWEEN #{start} AND #{end};
	</select>
	
	<!--공연 태그  장르로 검색  -->
	<select id="genreSearch" resultType="playVO" parameterType="java.util.Map">
		SELECT play_name, genre_name
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY play_start DESC) AS play_no,
		play_name, genre_name
		FROM play
		WHERE genre_name = #{genre}
		AND delete_date IS NULL
		) play2
		WHERE play2.play_no BETWEEN #{start} AND #{end};
	</select>
	
	<!--전체 공연 수 계산 -->
	<select id="playSearchCount" resultType="Integer" parameterType = "String">
		select count(*) from play where play_name LIKE CONCAT('%', #{query}, '%')
		AND delete_date IS NULL
	</select>
	
	<!--전체 공연 수 계산 -->
	<select id="genreCount" resultType="Integer" parameterType = "String">
		select count(*) from play where genre_name = #{genre}
		AND delete_date IS NULL
	</select>
	
	
</mapper>